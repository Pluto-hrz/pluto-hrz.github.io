<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>BeautifulSoup库—详细解析</title>
      <link href="/2020/03/15/BeautifulSoup%E5%BA%93/"/>
      <url>/2020/03/15/BeautifulSoup%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="BeautifulSoup库入门"><a href="#BeautifulSoup库入门" class="headerlink" title="BeautifulSoup库入门"></a>BeautifulSoup库入门</h1><ul><li>点击进入<a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/" target="_blank" rel="noopener">BeautifulSoup库官方文档</a><br></li></ul><h2 id="1、Beautiful-Soup库的基本元素"><a href="#1、Beautiful-Soup库的基本元素" class="headerlink" title="1、Beautiful  Soup库的基本元素"></a>1、Beautiful  Soup库的基本元素</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;p class&#x3D;&quot;title&quot;&gt;标签树 &lt;&#x2F;p&gt;</span><br><span class="line">    &lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure></div><ul><li>Beautiful Soup库是解析、遍历、维护“标签树”的功能库</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;p class&#x3D;&quot;title&quot;&gt; 标签树 &lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure></div><ul><li><code>p</code>:名称 Name 成对出现</li><li><code>class=&quot;title&quot;</code>:属性 Attributes 0个或多个</li><li><code>&lt;p&gt;…&lt;/p&gt;</code>:标签 Tag</li></ul><h4 id="基本元素——说明"><a href="#基本元素——说明" class="headerlink" title="基本元素——说明"></a>基本元素——说明</h4><ul><li>Tag: 标签，最基本的信息组织单元，分别用&lt;&gt;和&lt;/&gt;标明开头和结尾</li><li>Name: 标签的名字，<code>&lt;p&gt;…&lt;/p&gt;</code>的名字是’p’，格式：<code>&lt;tag&gt;.name</code></li><li>Attributes: 标签的属性，字典形式组织，格式：<code>&lt;tag&gt;.attrs</code></li><li>NavigableString: 标签内非属性字符串，<code>&lt;p&gt;…&lt;/p&gt;</code>中字符串，格式：<code>&lt;tag&gt;.string</code></li><li>Comment: 标签内字符串的注释部分，一种特殊的Comment类型</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">html = requests.get(<span class="string">"https://python123.io/ws/demo.html"</span>).text</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">"html.parser"</span>)</span><br><span class="line">print(<span class="string">"1、Tag 标签示例："</span>)</span><br><span class="line">print(soup.title)</span><br><span class="line">print(soup.a)</span><br><span class="line">print(<span class="string">"2、Name 标签名字示例："</span>)</span><br><span class="line">print(<span class="string">"a标签名称:"</span>, soup.a.name)</span><br><span class="line">print(<span class="string">"a的父标签名称:"</span>, soup.a.parent.name)</span><br><span class="line">print(<span class="string">"a的父标签的父标签名称:"</span>, soup.a.parent.parent.name)</span><br><span class="line">print(<span class="string">"3、Attributes 标签的属性："</span>)</span><br><span class="line">print(soup.a.attrs)</span><br><span class="line">print(soup.a.attrs[<span class="string">"class"</span>])</span><br><span class="line">print(soup.a.attrs[<span class="string">"id"</span>])</span><br><span class="line">print(<span class="string">"4、NavigableString 标签内非属性字符串示例："</span>)</span><br><span class="line">print(soup.a.string)</span><br><span class="line">print(soup.p.string)</span><br><span class="line">print(<span class="string">"5、Comment 标签内字符串的注释部分示例："</span>)</span><br><span class="line">print(type(soup.a.string))</span><br><span class="line">print(type(soup.p.string))</span><br></pre></td></tr></table></figure></div><pre><code>1、Tag 标签示例：&lt;title&gt;This is a python demo page&lt;/title&gt;&lt;a class=&quot;py1&quot; href=&quot;http://www.icourse163.org/course/BIT-268001&quot; id=&quot;link1&quot;&gt;Basic Python&lt;/a&gt;2、Name 标签名字示例：a标签名称: aa的父标签名称: pa的父标签的父标签名称: body3、Attributes 标签的属性：{&apos;href&apos;: &apos;http://www.icourse163.org/course/BIT-268001&apos;, &apos;class&apos;: [&apos;py1&apos;], &apos;id&apos;: &apos;link1&apos;}[&apos;py1&apos;]link14、NavigableString 标签内非属性字符串示例：Basic PythonThe demo python introduces several python courses.5、Comment 标签内字符串的注释部分示例：&lt;class &apos;bs4.element.NavigableString&apos;&gt;&lt;class &apos;bs4.element.NavigableString&apos;&gt;</code></pre><h2 id="2、Beautiful-Soup库的HTML内容遍历方法"><a href="#2、Beautiful-Soup库的HTML内容遍历方法" class="headerlink" title="2、Beautiful  Soup库的HTML内容遍历方法"></a>2、Beautiful  Soup库的HTML内容遍历方法</h2><p>Beautiful Soup库，也叫beautifulsoup4 或 bs4<br>约定引用方式如下，即主要是用BeautifulSoup类</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> bs4</span><br></pre></td></tr></table></figure></div><p>BeautifulSoup库的HTML内容遍历方法包括：下行遍历、上行遍历和平行遍历</p><h4 id="下行遍历"><a href="#下行遍历" class="headerlink" title="下行遍历"></a>下行遍历</h4><ul><li><code>.contents</code>: 子节点的列表，将<tag>所有儿子节点存入列表</tag></li><li><code>.children</code>: 子节点的迭代类型，与.contents类似，用于循环遍历儿子节点</li><li><code>.descendants</code>: 子孙节点的迭代类型，包含所有子孙节点，用于循环遍历</li></ul><h4 id="上行遍历"><a href="#上行遍历" class="headerlink" title="上行遍历"></a>上行遍历</h4><ul><li><code>.parent</code>: 节点的父亲标签</li><li><code>.parents</code>: 节点先辈标签的迭代类型，用于循环遍历先辈节点</li></ul><h4 id="平行遍历"><a href="#平行遍历" class="headerlink" title="平行遍历"></a>平行遍历</h4><ul><li><code>.next_sibling</code>: 返回按照HTML文本顺序的下一个平行节点标签</li><li><code>.previous_sibling</code>: 返回按照HTML文本顺序的上一个平行节点标签</li><li><code>.next_siblings</code>: 迭代类型，返回按照HTML文本顺序的后续所有平行节点标签</li><li><code>.previous_siblings</code>: 迭代类型，返回按照HTML文本顺序的前续所有平行节点标签</li></ul><p>BeautifulSoup库的prettify()方法:使查看更加友好</p><ul><li><code>.prettify()</code>: 为HTML文本&lt;&gt;及其内容增加更加’\n’</li><li><code>.prettify()</code>: 可用于标签，方法：<code>&lt;tag&gt;.prettify()</code></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">html = requests.get(<span class="string">"https://python123.io/ws/demo.html"</span>).text</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">"html.parser"</span>)</span><br><span class="line">print(soup.prettify())</span><br></pre></td></tr></table></figure></div><pre><code>&lt;html&gt; &lt;head&gt;  &lt;title&gt;   This is a python demo page  &lt;/title&gt; &lt;/head&gt; &lt;body&gt;  &lt;p class=&quot;title&quot;&gt;   &lt;b&gt;    The demo python introduces several python courses.   &lt;/b&gt;  &lt;/p&gt;  &lt;p class=&quot;course&quot;&gt;   Python is a wonderful general-purpose programming language. You can learn Python from novice to professional by tracking the following courses:   &lt;a class=&quot;py1&quot; href=&quot;http://www.icourse163.org/course/BIT-268001&quot; id=&quot;link1&quot;&gt;    Basic Python   &lt;/a&gt;   and   &lt;a class=&quot;py2&quot; href=&quot;http://www.icourse163.org/course/BIT-1001870001&quot; id=&quot;link2&quot;&gt;    Advanced Python   &lt;/a&gt;   .  &lt;/p&gt; &lt;/body&gt;&lt;/html&gt;</code></pre><h2 id="3、Beautiful-Soup库解析器"><a href="#3、Beautiful-Soup库解析器" class="headerlink" title="3、Beautiful Soup库解析器"></a>3、Beautiful Soup库解析器</h2><h4 id="解析器——使用方法——条件"><a href="#解析器——使用方法——条件" class="headerlink" title="解析器——使用方法——条件"></a>解析器——使用方法——条件</h4><ul><li>bs4的HTML解析器——BeautifulSoup(mk,’html.parser’)——安装bs4库</li><li>lxml的HTML解析器——BeautifulSoup(mk,’lxml’)——pip install lxml</li><li>lxml的XML解析器——BeautifulSoup(mk,’xml’)——pip install lxml</li><li>html5lib的解析器——BeautifulSoup(mk,’html5lib’)——pip install html5lib</li></ul><h2 id="4、信息标记与提取方法"><a href="#4、信息标记与提取方法" class="headerlink" title="4、信息标记与提取方法"></a>4、信息标记与提取方法</h2><h3 id="①信息的标记"><a href="#①信息的标记" class="headerlink" title="①信息的标记"></a>①信息的标记</h3><ul><li>标记后的信息可形成信息组织结构，增加了信息维度</li><li>标记的结构与信息一样具有重要价值</li><li>标记后的信息可用于通信、存储或展示</li><li>标记后的信息更利于程序理解和运用</li></ul><h4 id="信息标记的三种形式：XML-、JSON-、YAML"><a href="#信息标记的三种形式：XML-、JSON-、YAML" class="headerlink" title="信息标记的三种形式：XML 、JSON 、YAML"></a>信息标记的三种形式：XML 、JSON 、YAML</h4><ul><li><a href="https://baike.baidu.com/item/XML" target="_blank" rel="noopener">XML</a>: 最早的通用信息标记语言，可扩展性好，但繁琐;Internet上的信息交互与传递</li><li><a href="https://baike.baidu.com/item/JSON" target="_blank" rel="noopener">JSON</a>: 信息有类型，适合程序处理(js)，较XML简洁;移动应用云端和节点的信息通信，无注释</li><li><a href="https://baike.baidu.com/item/YAML" target="_blank" rel="noopener">YAML</a>: 信息无类型，文本信息比例最高，可读性好;各类系统的配置文件，有注释易读</li></ul><h3 id="②信息的提取"><a href="#②信息的提取" class="headerlink" title="②信息的提取"></a>②信息的提取</h3><ul><li>从标记后的信息中提取所关注的内容</li></ul><h4 id="1-完整解析信息的标记形式，再提取关键信息-XML-JSON-YAML"><a href="#1-完整解析信息的标记形式，再提取关键信息-XML-JSON-YAML" class="headerlink" title="(1)完整解析信息的标记形式，再提取关键信息(XML JSON YAML)"></a>(1)完整解析信息的标记形式，再提取关键信息(XML JSON YAML)</h4><ul><li>需要标记解析器，例如：bs4库的标签树遍历</li><li>优点：信息解析准确</li><li>缺点：提取过程繁琐，速度慢</li></ul><h4 id="2-无视标记形式，直接搜索关键信息-搜索"><a href="#2-无视标记形式，直接搜索关键信息-搜索" class="headerlink" title="(2)无视标记形式，直接搜索关键信息(搜索)"></a>(2)无视标记形式，直接搜索关键信息(搜索)</h4><ul><li>对信息的文本查找函数即可</li><li>优点：提取过程简洁，速度较快</li><li>缺点：提取结果准确性与信息内容相关</li></ul><h4 id="3-结合形式解析与搜索方法，提取关键信息-XML-JSON-YAML-搜索"><a href="#3-结合形式解析与搜索方法，提取关键信息-XML-JSON-YAML-搜索" class="headerlink" title="(3)结合形式解析与搜索方法，提取关键信息(XML JSON YAML 搜索)"></a>(3)结合形式解析与搜索方法，提取关键信息(XML JSON YAML 搜索)</h4><ul><li>需要标记解析器及文本查找函数</li></ul><h2 id="5、Beautiful-Soup库的HTML内容查找方法"><a href="#5、Beautiful-Soup库的HTML内容查找方法" class="headerlink" title="5、Beautiful  Soup库的HTML内容查找方法"></a>5、Beautiful  Soup库的HTML内容查找方法</h2><h4 id="lt-gt-find-all-name-attrs-recursive-string-kwargs"><a href="#lt-gt-find-all-name-attrs-recursive-string-kwargs" class="headerlink" title="&lt;&gt;.find_all(name, attrs, recursive, string, **kwargs) :"></a><code>&lt;&gt;.find_all(name, attrs, recursive, string, **kwargs)</code> :</h4><ul><li><code>name</code> : 对标签名称的检索字符串</li><li><code>attrs</code>: 对标签属性值的检索字符串，可标注属性检索</li><li><code>recursive</code>: 是否对子孙全部检索，默认True</li><li><code>string</code>: &lt;&gt;…&lt;/&gt;中字符串区域的检索字符串</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">soup = BeautifulSoup(html, <span class="string">"html.parser"</span>)</span><br><span class="line">a = soup.find_all(<span class="string">"a"</span>)</span><br><span class="line">b = soup.find_all(<span class="string">"a"</span>, &#123;<span class="string">"class"</span>: <span class="string">"py1"</span>&#125;)</span><br><span class="line">print(a)</span><br><span class="line">print(b)</span><br></pre></td></tr></table></figure></div><pre><code>[&lt;a class=&quot;py1&quot; href=&quot;http://www.icourse163.org/course/BIT-268001&quot; id=&quot;link1&quot;&gt;Basic Python&lt;/a&gt;, &lt;a class=&quot;py2&quot; href=&quot;http://www.icourse163.org/course/BIT-1001870001&quot; id=&quot;link2&quot;&gt;Advanced Python&lt;/a&gt;][&lt;a class=&quot;py1&quot; href=&quot;http://www.icourse163.org/course/BIT-268001&quot; id=&quot;link1&quot;&gt;Basic Python&lt;/a&gt;]</code></pre><ul><li><code>&lt;&gt;.find()</code>: 搜索且只返回一个结果，同.find_all()参数</li><li><code>&lt;&gt;.find_parents()</code>: 在先辈节点中搜索，返回列表类型，同.find_all()参数</li><li><code>&lt;&gt;.find_parent()</code>: 在先辈节点中返回一个结果，同.find()参数</li><li><code>&lt;&gt;.find_next_siblings()</code>: 在后续平行节点中搜索，返回列表类型，同.find_all()参数</li><li><code>&lt;&gt;.find_next_sibling()</code>: 在后续平行节点中返回一个结果，同.find()参数</li><li><code>&lt;&gt;.find_previous_siblings()</code>: 在前序平行节点中搜索，返回列表类型，同.find_all()参数</li><li><code>&lt;&gt;.find_previous_sibling()</code>: 在前序平行节点中返回一个结果，同.find()参数</li></ul>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> 爬虫学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> BeautifulSoup </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Request库—详细解析</title>
      <link href="/2020/03/10/Request%E5%BA%93/"/>
      <url>/2020/03/10/Request%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Requests库的入门"><a href="#Requests库的入门" class="headerlink" title="Requests库的入门"></a>Requests库的入门</h1><p>点击进入<a href="https://2.python-requests.org//zh_CN/latest/user/install.html" target="_blank" rel="noopener">requests库官方文档</a><br></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">r = requests.get(<span class="string">"http://www.baidu.com"</span>)</span><br><span class="line">print(r.status_code)</span><br></pre></td></tr></table></figure></div><pre><code>200</code></pre><h2 id="一、Requests库的基本方法"><a href="#一、Requests库的基本方法" class="headerlink" title="一、Requests库的基本方法"></a>一、Requests库的基本方法</h2><ul><li>requests.request() 构造一个请求，支撑以下各方法的基础方法</li><li>requests.get() 获取HTML网页的主要方法，对应于HTTP的GET</li><li>requests.head() 获取HTML网页头信息的方法，对应于HTTP的HEAD</li><li>requests.post() 向HTML网页提交POST请求的方法，对应于HTTP的POST</li><li>requests.put() 向HTML网页提交PUT请求的方法，对应于HTTP的PUT</li><li>requests.patch() 向HTML网页提交局部修改请求，对应于HTTP的PATCH</li><li>requests.delete() 向HTML页面提交删除请求，对应于HTTP的DELETE</li></ul><h3 id="1-requests-request-method-url-kwargs"><a href="#1-requests-request-method-url-kwargs" class="headerlink" title="(1) requests.request(method, url, **kwargs)"></a>(1) requests.request(method, url, **kwargs)</h3><ul><li>method :  请求方式，对应get/put/post等7种</li><li>url :  拟获取页面的url链接</li><li>**kwargs :  控制访问的参数，共13个</li></ul><h4 id="method-请求方式"><a href="#method-请求方式" class="headerlink" title="method : 请求方式"></a>method : 请求方式</h4><ul><li>r = requests.request(‘GET’, url, **kwargs) </li><li>r = requests.request(‘HEAD’, url, **kwargs) </li><li>r = requests.request(‘POST’, url, **kwargs) </li><li>r = requests.request(‘PUT’, url, **kwargs) </li><li>r = requests.request(‘PATCH’, url, **kwargs) </li><li>r = requests.request(‘delete’, url, **kwargs) </li><li>r = requests.request(‘OPTIONS’, url, **kwargs)</li></ul><h4 id="kwargs-控制访问的参数，均为可选项"><a href="#kwargs-控制访问的参数，均为可选项" class="headerlink" title="**kwargs: 控制访问的参数，均为可选项"></a>**kwargs: 控制访问的参数，均为可选项</h4><ul><li>params : 字典或字节序列，作为参数增加到url中</li><li>data : 字典、字节序列或文件对象，作为Request的内容</li><li>json : JSON格式的数据，作为Request的内容</li><li>headers : 字典，HTTP定制头</li><li>cookies : 字典或CookieJar，Request中的cookie</li><li>auth : 元组，支持HTTP认证功能</li><li>files : 字典类型，传输文件</li><li>timeout : 设定超时时间，秒为单位</li><li>proxies : 字典类型，设定访问代理服务器，可以增加登录认证</li><li>allow_redirects : True/False，默认为True，重定向开关</li><li>stream : True/False，默认为True，获取内容立即下载开关</li><li>verify : True/False，默认为True，认证SSL证书开关</li><li>cert : 本地SSL证书路径</li></ul><h3 id="2-requests-get-url-params-None-kwargs"><a href="#2-requests-get-url-params-None-kwargs" class="headerlink" title="(2) requests.get(url, params=None, **kwargs)"></a>(2) requests.get(url, params=None, **kwargs)</h3><ul><li>url :  拟获取页面的url链接</li><li>params :  url中的额外参数，字典或字节流格式，可选</li><li>**kwargs :  12个控制访问的参数</li></ul><h3 id="3-requests-head-url-kwargs"><a href="#3-requests-head-url-kwargs" class="headerlink" title="(3) requests.head(url, **kwargs)"></a>(3) requests.head(url, **kwargs)</h3><ul><li>url :  拟获取页面的url链接</li><li>**kwargs :  12个控制访问的参数</li></ul><h3 id="4-requests-post-url-data-None-json-None-kwargs"><a href="#4-requests-post-url-data-None-json-None-kwargs" class="headerlink" title="(4) requests.post(url, data=None, json=None, **kwargs)"></a>(4) requests.post(url, data=None, json=None, **kwargs)</h3><ul><li>url : 拟更新页面的url链接</li><li>data : 字典、字节序列或文件，Request的内容</li><li>json : JSON格式的数据，Request的内容</li><li>**kwargs : 12个控制访问的参数</li></ul><h3 id="5-requests-put-url-data-None-kwargs"><a href="#5-requests-put-url-data-None-kwargs" class="headerlink" title="(5) requests.put(url, data=None, **kwargs)"></a>(5) requests.put(url, data=None, **kwargs)</h3><ul><li>url : 拟更新页面的url链接</li><li>data : 字典、字节序列或文件，Request的内容</li><li>**kwargs : 12个控制访问的参数</li></ul><h3 id="6-requests-patch-url-data-None-kwargs"><a href="#6-requests-patch-url-data-None-kwargs" class="headerlink" title="(6) requests.patch(url, data=None, **kwargs)"></a>(6) requests.patch(url, data=None, **kwargs)</h3><ul><li>url : 拟更新页面的url链接</li><li>data : 字典、字节序列或文件，Request的内容</li><li>**kwargs : 12个控制访问的参数</li></ul><h3 id="7-requests-delete-url-kwargs"><a href="#7-requests-delete-url-kwargs" class="headerlink" title="(7) requests.delete(url, **kwargs)"></a>(7) requests.delete(url, **kwargs)</h3><ul><li>url : 拟删除页面的url链接</li><li>**kwargs : 12个控制访问的参数</li></ul><h2 id="二、理解response对象"><a href="#二、理解response对象" class="headerlink" title="二、理解response对象"></a>二、理解response对象</h2><h3 id="1-Response对象包含服务器返回的所有信息，也包含请求的Request信息"><a href="#1-Response对象包含服务器返回的所有信息，也包含请求的Request信息" class="headerlink" title="(1) Response对象包含服务器返回的所有信息，也包含请求的Request信息"></a>(1) Response对象包含服务器返回的所有信息，也包含请求的Request信息</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">r = requests.get(<span class="string">"http://www.baidu.com"</span>)</span><br><span class="line">print(r.status_code)</span><br><span class="line">print(type(r))</span><br><span class="line">print(r.headers)</span><br></pre></td></tr></table></figure></div><pre><code>200&lt;class &apos;requests.models.Response&apos;&gt;{&apos;Cache-Control&apos;: &apos;private, no-cache, no-store, proxy-revalidate, no-transform&apos;, &apos;Connection&apos;: &apos;Keep-Alive&apos;, &apos;Content-Encoding&apos;: &apos;gzip&apos;, &apos;Content-Type&apos;: &apos;text/html&apos;, &apos;Date&apos;: &apos;Fri, 22 Nov 2019 00:25:29 GMT&apos;, &apos;Last-Modified&apos;: &apos;Mon, 23 Jan 2017 13:27:36 GMT&apos;, &apos;Pragma&apos;: &apos;no-cache&apos;, &apos;Server&apos;: &apos;bfe/1.0.8.18&apos;, &apos;Set-Cookie&apos;: &apos;BDORZ=27315; max-age=86400; domain=.baidu.com; path=/&apos;, &apos;Transfer-Encoding&apos;: &apos;chunked&apos;}</code></pre><h3 id="2-Response对象的属性"><a href="#2-Response对象的属性" class="headerlink" title="(2) Response对象的属性"></a>(2) Response对象的属性</h3><ul><li>r.status_code HTTP请求的返回状态，200表示连接成功，404表示失败</li><li>r.text HTTP响应内容的字符串形式，即，url对应的页面内容</li><li>r.encoding 从HTTP header中猜测的响应内容编码方式</li><li>r.apparent_encoding 从内容中分析出的响应内容编码方式（备选编码方式）</li><li>r.content HTTP响应内容的二进制形式</li></ul><h3 id="3-理解Response的编码"><a href="#3-理解Response的编码" class="headerlink" title="(3) 理解Response的编码"></a>(3) 理解Response的编码</h3><ul><li>r.encoding：如果header中不存在charset，则认为编码为ISO‐8859‐1</li><li>r.text根据r.encoding显示网页内容</li><li>r.apparent_encoding：根据网页内容分析出的编码方式（可以看作是r.encoding的备选）</li></ul><h3 id="4-理解Response异常"><a href="#4-理解Response异常" class="headerlink" title="(4) 理解Response异常"></a>(4) 理解Response异常</h3><ul><li>r.raise_for_status() 如果不是200，产生异常 requests.HTTPError</li><li>r.raise_for_status()在方法内部判断r.status_code是否等于200，不需要增加额外的if语句，该语句便于利用try‐except进行异常处理</li></ul><h2 id="三、Requests库的常见异常"><a href="#三、Requests库的常见异常" class="headerlink" title="三、Requests库的常见异常"></a>三、Requests库的常见异常</h2><ul><li>requests.ConnectionError 网络连接错误异常，如DNS查询失败、拒绝连接等</li><li>requests.HTTPError HTTP错误异常</li><li>requests.URLRequired URL缺失异常</li><li>requests.TooManyRedirects 超过最大重定向次数，产生重定向异常</li><li>requests.ConnectTimeout 连接远程服务器超时异常</li><li>requests.Timeout 请求URL超时，产生超时异常</li></ul><h2 id="四、爬取网页的通用代码框架"><a href="#四、爬取网页的通用代码框架" class="headerlink" title="四、爬取网页的通用代码框架"></a>四、爬取网页的通用代码框架</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">request</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(url, timeout=<span class="number">100</span>)</span><br><span class="line">        r.raise_for_status()</span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"访问异常"</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://www.baidu.com"</span></span><br><span class="line">print(request(url))</span><br></pre></td></tr></table></figure></div><pre><code>&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt; &lt;head&gt;&lt;meta http-equiv=content-type content=text/html;charset=utf-8&gt;&lt;meta http-equiv=X-UA-Compatible content=IE=Edge&gt;&lt;meta content=always name=referrer&gt;&lt;link rel=stylesheet type=text/css href=http://s1.bdstatic.com/r/www/cache/bdorz/baidu.min.css&gt;&lt;title&gt;百度一下，你就知道&lt;/title&gt;&lt;/head&gt; &lt;body link=#0000cc&gt; &lt;div id=wrapper&gt; &lt;div id=head&gt; &lt;div class=head_wrapper&gt; &lt;div class=s_form&gt; &lt;div class=s_form_wrapper&gt; &lt;div id=lg&gt; &lt;img hidefocus=true src=//www.baidu.com/img/bd_logo1.png width=270 height=129&gt; &lt;/div&gt; &lt;form id=form name=f action=//www.baidu.com/s class=fm&gt; &lt;input type=hidden name=bdorz_come value=1&gt; &lt;input type=hidden name=ie value=utf-8&gt; &lt;input type=hidden name=f value=8&gt; &lt;input type=hidden name=rsv_bp value=1&gt; &lt;input type=hidden name=rsv_idx value=1&gt; &lt;input type=hidden name=tn value=baidu&gt;&lt;span class=&quot;bg s_ipt_wr&quot;&gt;&lt;input id=kw name=wd class=s_ipt value maxlength=255 autocomplete=off autofocus&gt;&lt;/span&gt;&lt;span class=&quot;bg s_btn_wr&quot;&gt;&lt;input type=submit id=su value=百度一下 class=&quot;bg s_btn&quot;&gt;&lt;/span&gt; &lt;/form&gt; &lt;/div&gt; &lt;/div&gt; &lt;div id=u1&gt; &lt;a href=http://news.baidu.com name=tj_trnews class=mnav&gt;新闻&lt;/a&gt; &lt;a href=http://www.hao123.com name=tj_trhao123 class=mnav&gt;hao123&lt;/a&gt; &lt;a href=http://map.baidu.com name=tj_trmap class=mnav&gt;地图&lt;/a&gt; &lt;a href=http://v.baidu.com name=tj_trvideo class=mnav&gt;视频&lt;/a&gt; &lt;a href=http://tieba.baidu.com name=tj_trtieba class=mnav&gt;贴吧&lt;/a&gt; &lt;noscript&gt; &lt;a href=http://www.baidu.com/bdorz/login.gif?login&amp;amp;tpl=mn&amp;amp;u=http%3A%2F%2Fwww.baidu.com%2f%3fbdorz_come%3d1 name=tj_login class=lb&gt;登录&lt;/a&gt; &lt;/noscript&gt; &lt;script&gt;document.write(&apos;&lt;a href=&quot;http://www.baidu.com/bdorz/login.gif?login&amp;tpl=mn&amp;u=&apos;+ encodeURIComponent(window.location.href+ (window.location.search === &quot;&quot; ? &quot;?&quot; : &quot;&amp;&quot;)+ &quot;bdorz_come=1&quot;)+ &apos;&quot; name=&quot;tj_login&quot; class=&quot;lb&quot;&gt;登录&lt;/a&gt;&apos;);&lt;/script&gt; &lt;a href=//www.baidu.com/more/ name=tj_briicon class=bri style=&quot;display: block;&quot;&gt;更多产品&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div id=ftCon&gt; &lt;div id=ftConw&gt; &lt;p id=lh&gt; &lt;a href=http://home.baidu.com&gt;关于百度&lt;/a&gt; &lt;a href=http://ir.baidu.com&gt;About Baidu&lt;/a&gt; &lt;/p&gt; &lt;p id=cp&gt;&amp;copy;2017&amp;nbsp;Baidu&amp;nbsp;&lt;a href=http://www.baidu.com/duty/&gt;使用百度前必读&lt;/a&gt;&amp;nbsp; &lt;a href=http://jianyi.baidu.com/ class=cp-feedback&gt;意见反馈&lt;/a&gt;&amp;nbsp;京ICP证030173号&amp;nbsp; &lt;img src=//www.baidu.com/img/gs.gif&gt; &lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt;</code></pre><p>​    </p><h2 id="五、HTTP协议"><a href="#五、HTTP协议" class="headerlink" title="五、HTTP协议"></a>五、HTTP协议</h2><h3 id="1-HTTP-URL的理解"><a href="#1-HTTP-URL的理解" class="headerlink" title="(1) HTTP URL的理解"></a>(1) HTTP URL的理解</h3><ul><li>URL是通过HTTP协议存取资源的Internet路径，一个URL对应一个数据资源</li></ul><h3 id="2-HTTP协议对资源的操作"><a href="#2-HTTP协议对资源的操作" class="headerlink" title="(2) HTTP协议对资源的操作"></a>(2) HTTP协议对资源的操作</h3><ul><li>GET 请求获取URL位置的资源</li><li>HEAD 请求获取URL位置资源的响应消息报告，即获得该资源的头部信息</li><li>POST 请求向URL位置的资源后附加新的数据</li><li>PUT 请求向URL位置存储一个资源，覆盖原URL位置的资源</li><li>PATCH 请求局部更新URL位置的资源，即改变该处资源的部分内容</li><li>DELETE 请求删除URL位置存储的资源</li></ul><h3 id="3-PATCH和PUT的区别"><a href="#3-PATCH和PUT的区别" class="headerlink" title="(3) PATCH和PUT的区别"></a>(3) PATCH和PUT的区别</h3><p>假设URL位置有一组数据UserInfo，包括UserID、UserName等20个字段,</p><p>需求：用户修改了UserName，其他不变</p><ul><li>采用PATCH，仅向URL提交UserName的局部更新请求</li><li>采用PUT，必须将所有20个字段一并提交到URL，未提交字段被删除</li></ul><p>PATCH的最主要好处：节省网络带宽</p><h2 id="六、Robot协议（网络爬虫排除标准）"><a href="#六、Robot协议（网络爬虫排除标准）" class="headerlink" title="六、Robot协议（网络爬虫排除标准）"></a>六、Robot协议（网络爬虫排除标准）</h2><h3 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h3><p><a href="http://www.baidu.com/robots.txt" target="_blank" rel="noopener">百度Robot协议</a><br><br><a href="http://news.sina.com.cn/robots.txt" target="_blank" rel="noopener">新浪新闻Robot协议</a><br><br><a href="http://www.qq.com/robots.txt" target="_blank" rel="noopener">腾讯Robot协议</a><br><br><a href="http://news.qq.com/robots.txt" target="_blank" rel="noopener">腾讯新闻Robot协议</a><br></p><ul><li>*代表所有，/代表根目录</li><li>User‐agent: *</li><li>Disallow: /</li></ul><h4 id="网络爬虫："><a href="#网络爬虫：" class="headerlink" title="网络爬虫："></a>网络爬虫：</h4><ul><li>自动或人工识别robots.txt，再进行内容爬取</li></ul><h4 id="约束性："><a href="#约束性：" class="headerlink" title="约束性："></a>约束性：</h4><ul><li>Robots协议是建议但非约束性，网络爬虫可以不遵守，但存在法律风险</li></ul><h1 id="七、爬虫实战项目"><a href="#七、爬虫实战项目" class="headerlink" title="七、爬虫实战项目"></a>七、爬虫实战项目</h1><h3 id="实例1：京东商品页面的爬取"><a href="#实例1：京东商品页面的爬取" class="headerlink" title="实例1：京东商品页面的爬取"></a>实例1：京东商品页面的爬取</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"https://item.jd.com/2967929.html"</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    r.raise_for_status()</span><br><span class="line">    r.encoding = r.apparent_encoding</span><br><span class="line">    print(r.text[:<span class="number">1000</span>])</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"爬取失败"</span>)</span><br></pre></td></tr></table></figure></div><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html lang=&quot;zh-CN&quot;&gt;&lt;head&gt;    &lt;!-- shouji --&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=gbk&quot; /&gt;    &lt;title&gt;【华为荣耀8】荣耀8 4GB+64GB 全网通4G手机 魅海蓝【行情 报价 价格 评测】-京东&lt;/title&gt;    &lt;meta name=&quot;keywords&quot; content=&quot;HUAWEI荣耀8,华为荣耀8,华为荣耀8报价,HUAWEI荣耀8报价&quot;/&gt;    &lt;meta name=&quot;description&quot; content=&quot;【华为荣耀8】京东JD.COM提供华为荣耀8正品行货，并包括HUAWEI荣耀8网购指南，以及华为荣耀8图片、荣耀8参数、荣耀8评论、荣耀8心得、荣耀8技巧等信息，网购华为荣耀8上京东,放心又轻松&quot; /&gt;    &lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot;&gt;    &lt;meta http-equiv=&quot;mobile-agent&quot; content=&quot;format=xhtml; url=//item.m.jd.com/product/2967929.html&quot;&gt;    &lt;meta http-equiv=&quot;mobile-agent&quot; content=&quot;format=html5; url=//item.m.jd.com/product/2967929.html&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=Edge&quot;&gt;    &lt;link rel=&quot;canonical&quot; href=&quot;//item.jd.com/2967929.html&quot;/&gt;        &lt;link rel=&quot;dns-prefetch&quot; href=&quot;//misc.360buyimg.com&quot;/&gt;    &lt;link rel=&quot;dns-prefetch&quot; href=&quot;//static.360buyimg.com&quot;/&gt;    &lt;link rel=&quot;dns-prefetch&quot; href=&quot;//img10.360buyimg.com&quot;/&gt;    &lt;link rel=&quot;dns</code></pre><h3 id="实例2：亚马逊商品页面的爬取-已经失效了"><a href="#实例2：亚马逊商品页面的爬取-已经失效了" class="headerlink" title="实例2：亚马逊商品页面的爬取(已经失效了)"></a>实例2：亚马逊商品页面的爬取(已经失效了)</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"https://www.amazon.cn/gp/product/B01M8L5Z3Y"</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    kv = &#123;<span class="string">'user-agent'</span>:<span class="string">'Mozilla/5.0'</span>&#125;</span><br><span class="line">    r = requests.get(url,headers=kv)</span><br><span class="line">    r.raise_for_status()</span><br><span class="line">    r.encoding = r.apparent_encoding</span><br><span class="line">    print(r.text[<span class="number">1000</span>:<span class="number">2000</span>])</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"爬取失败"</span>)</span><br></pre></td></tr></table></figure></div><pre><code>       ue_sid = (document.cookie.match(/session-id=([0-9-]+)/) || [])[1],        ue_sn = &quot;opfcaptcha.amazon.cn&quot;,        ue_id = &apos;7F04678RW7QQ93SA4R06&apos;;}&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;!--        To discuss automated access to Amazon data please contact api-services-support@amazon.com.        For information about migrating to our APIs refer to our Marketplace APIs at https://developer.amazonservices.com.cn/index.html/ref=rm_c_sv, or our Product Advertising API at https://associates.amazon.cn/gp/advertising/api/detail/main.html/ref=rm_c_ac for advertising use cases.--&gt;&lt;!--Correios.DoNotSend--&gt;&lt;div class=&quot;a-container a-padding-double-large&quot; style=&quot;min-width:350px;padding:44px 0 !important&quot;&gt;    &lt;div class=&quot;a-row a-spacing-double-large&quot; style=&quot;width: 350px; margin: 0 auto&quot;&gt;        &lt;div class=&quot;a-row a-spacing-medium a-text-center&quot;&gt;&lt;i class=&quot;a-icon a-logo&quot;&gt;&lt;/i&gt;&lt;/div&gt;        &lt;div class=&quot;a-box a-alert a-alert-info a-spacing-base&quot;&gt;            &lt;div class=&quot;a-box-inner&quot;&gt;</code></pre><p>​    </p><h3 id="实例3：百度-360搜索关键字提交"><a href="#实例3：百度-360搜索关键字提交" class="headerlink" title="实例3：百度/360搜索关键字提交"></a>实例3：百度/360搜索关键字提交</h3><ul><li>百度的关键词接口：<br><a href="http://www.baidu.com/s?wd=keyword" target="_blank" rel="noopener">http://www.baidu.com/s?wd=keyword</a></li><li>360的关键词接口：<br><a href="http://www.so.com/s?q=keyword" target="_blank" rel="noopener">http://www.so.com/s?q=keyword</a></li></ul><h4 id="①百度搜索关键字提交"><a href="#①百度搜索关键字提交" class="headerlink" title="①百度搜索关键字提交"></a>①百度搜索关键字提交</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">keyword = <span class="string">"Python"</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    kv = &#123;<span class="string">'wd'</span>:keyword&#125;</span><br><span class="line">    r = requests.get(<span class="string">"http://www.baidu.com/s"</span>,params=kv)</span><br><span class="line">    print(r.request.url)</span><br><span class="line">    r.raise_for_status()</span><br><span class="line">    r.encoding = r.apparent_encoding</span><br><span class="line">    print(len(r.text))</span><br><span class="line">    print(r.text[:<span class="number">1000</span>])</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"爬取失败"</span>)</span><br></pre></td></tr></table></figure></div><pre><code>https://wappass.baidu.com/static/captcha/tuxing.html?&amp;ak=c27bbc89afca0463650ac9bde68ebe06&amp;backurl=https%3A%2F%2Fwww.baidu.com%2Fs%3Fwd%3DPython&amp;logid=7645345012099045417&amp;signature=710863db7c7bfd3155daac5cf6b5ed22&amp;timestamp=15744019461469&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-CN&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;utf-8&quot;&gt;    &lt;title&gt;百度安全验证&lt;/title&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot;&gt;    &lt;meta name=&quot;apple-mobile-web-app-status-bar-style&quot; content=&quot;black&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, user-scalable=no, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0&quot;&gt;    &lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no, email=no&quot;&gt;    &lt;link rel=&quot;shortcut icon&quot; href=&quot;https://www.baidu.com/favicon.ico&quot; type=&quot;image/x-icon&quot;&gt;    &lt;link rel=&quot;icon&quot; sizes=&quot;any&quot; mask href=&quot;https://www.baidu.com/img/baidu.svg&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=Edge&quot;&gt;    &lt;meta http-equiv=&quot;Content-Security-Policy&quot; content=&quot;upgrade-insecure-requests&quot;&gt;    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://wappass.bdimg.com/static/touch/css/api/mkdjump_8befa48.css&quot; /&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;timeout hide&quot;&gt;        &lt;div class=&quot;timeout-img&quot;&gt;&lt;</code></pre><h4 id="②360搜索关键字提交"><a href="#②360搜索关键字提交" class="headerlink" title="②360搜索关键字提交"></a>②360搜索关键字提交</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">keyword = <span class="string">"Python"</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    kv = &#123;<span class="string">'q'</span>:keyword&#125;</span><br><span class="line">    r = requests.get(<span class="string">"http://www.so.com/s"</span>,params=kv)</span><br><span class="line">    print(r.request.url)</span><br><span class="line">    r.raise_for_status()</span><br><span class="line">    r.encoding = r.apparent_encoding</span><br><span class="line">    print(len(r.text))</span><br><span class="line">    print(r.text[:<span class="number">1000</span>])</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"爬取失败"</span>)</span><br></pre></td></tr></table></figure></div><pre><code>https://www.so.com/s?q=Python308919&lt;!DOCTYPE html&gt;&lt;!--[if lt IE 7 ]&gt;&lt;html class=&quot;ie6&quot;&gt;&lt;![endif]--&gt;&lt;!--[if IE 7 ]&gt;&lt;html class=&quot;ie7&quot;&gt;&lt;![endif]--&gt;&lt;!--[if IE 8 ]&gt;&lt;html class=&quot;ie8&quot;&gt;&lt;![endif]--&gt;&lt;!--[if IE 9 ]&gt;&lt;html class=&quot;ie9&quot;&gt;&lt;![endif]--&gt;&lt;!--[if (gt IE 9)|!(IE)]&gt;&lt;!--&gt;&lt;html&gt;&lt;!--&lt;![endif]--&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;meta content=&quot;always&quot; name=&quot;referrer&quot;&gt;&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot;&gt;&lt;title&gt;Python_360搜索&lt;/title&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;//p.ssl.qhimg.com&quot;&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;//s.ssl.qhimg.com&quot;&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;//s.ssl.qhres.com&quot;&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;//p418.ssl.qhimgs4.com&quot;&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;//p419.ssl.qhimgs4.com&quot;&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;//p420.ssl.qhimgs4.com&quot;&gt;&lt;link rel=&quot;shortcut icon&quot; href=&quot;https://s.ssl.qhimg.com/static/121a1737750aa53d.ico&quot; type=&quot;image/x-icon&quot;&gt;&lt;link rel=&quot;search&quot; type=&quot;application/opensearchdescription+xml&quot; href=&quot;https://www.so.com/soopensearch.xml&quot; title=&quot;360搜索&quot;&gt;&lt;style type=&quot;text/css&quot;&gt;body{background</code></pre><h3 id="实例4：网络图片的爬取和存储"><a href="#实例4：网络图片的爬取和存储" class="headerlink" title="实例4：网络图片的爬取和存储"></a>实例4：网络图片的爬取和存储</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">url = <span class="string">"http://image.nationalgeographic.com.cn/2017/0211/20170211061910157.jpg"</span></span><br><span class="line"><span class="comment"># url = "https://images.pexels.com/photos/373488/pexels-photo-373488.jpeg?auto=compress&amp;cs=tinysrgb&amp;h=750&amp;w=1260"</span></span><br><span class="line">root = <span class="string">"E://photo//"</span></span><br><span class="line">path = root + url.split(<span class="string">'/'</span>)[<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(root):</span><br><span class="line">        os.mkdir(root)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path):</span><br><span class="line">        kv = &#123;<span class="string">'user-agent'</span>:<span class="string">'Mozilla/5.0'</span>&#125;</span><br><span class="line">        r = requests.get(url,headers=kv)</span><br><span class="line">        <span class="keyword">with</span> open(path,<span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(r.content)</span><br><span class="line">            f.close()</span><br><span class="line">            print(<span class="string">"文件保存成功"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"文件已存在"</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"爬取失败"</span>)</span><br></pre></td></tr></table></figure></div><pre><code>文件保存成功</code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> 爬虫学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> requests </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>8、设置Nginx和uWSGI——Django项目部署到阿里云服务器</title>
      <link href="/2020/03/08/8%E3%80%81%E8%AE%BE%E7%BD%AENginx%E5%92%8CuWSGI/"/>
      <url>/2020/03/08/8%E3%80%81%E8%AE%BE%E7%BD%AENginx%E5%92%8CuWSGI/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="第一步：安装Nginx和uWSGI"><a href="#第一步：安装Nginx和uWSGI" class="headerlink" title="第一步：安装Nginx和uWSGI"></a>第一步：安装Nginx和uWSGI</h2><ul><li>首先，我们需要先登录远程服务器；然后，我们使用命令<code>sudo pip3 install uwsgi</code>安装<code>uWSGI</code>；接下来，我们需要给<code>uWSGI</code>创建一个链接，执行命令<code>sudo ln -s /usr/local/python3/bin/uwsgi /usr/bin/uwsgi3</code>来创建一个链接，我们就完成了<code>uWSGI</code>安装和设置工作；最后，我们使用命令<code>sudo yum -y install nginx</code>安装<code>Nginx</code>，安装完成后，我们就可以退出远程登录了。<br><a href="http://image.tooltool.club/19858366-b895f48e39acb100.png" data-fancybox="group" data-caption="安装Nginx和uWSGI" class="fancybox"><img alt="安装Nginx和uWSGI" title="安装Nginx和uWSGI" data-src="http://image.tooltool.club/19858366-b895f48e39acb100.png" class="lazyload"></a></li></ul><h2 id="第二步：配置settings-py文件"><a href="#第二步：配置settings-py文件" class="headerlink" title="第二步：配置settings.py文件"></a>第二步：配置settings.py文件</h2><ul><li><p>首先，我们用VS Code打开<code>mysite</code>这个文件夹；然后，打开<code>setiings.py</code>文件进行一些设置。</p></li><li><p>我们要将<code>DEBUG = True</code>修改为<code>DEBUG = False</code>；然后，找到<code>TEMPLATES</code>并将里面的<code>&#39;DIRS&#39;: []</code>修改为<code>&#39;DIRS&#39;: [os.path.join(BASE_DIR, &#39;templates&#39;),]</code>，并在主目录下创建名为<code>templates</code>的文件夹；最后，我们要在文件的末尾加上两行代码，分别是<code>STATIC_ROOT = os.path.join(BASE_DIR, &#39;../collected_static&#39;)</code>和<code>STATICFILES_DIRS = (os.path.join(BASE_DIR, &#39;static&#39;),)</code>两行代码，并在主目录下创建名为<code>static</code>的文件夹，按<code>Ctrl + S</code>保存对<code>settings.py</code>文件的修改。<br><a href="http://image.tooltool.club/19858366-547d684c44093ff4.png" data-fancybox="group" data-caption="配置settings.py文件" class="fancybox"><img alt="配置settings.py文件" title="配置settings.py文件" data-src="http://image.tooltool.club/19858366-547d684c44093ff4.png" class="lazyload"></a></p></li><li><p>然后，回到终端，登录远程服务器，执行命令<code>cd /home/programs/</code>进入到<code>/home/programs/</code>路径下，然后执行命令<code>sudo mkdir collected_static</code>创建一个名为<code>collected_static</code>的文件夹；最后，我们通过命令<code>cd mysite</code>进入项目主目录，执行命令<code>sudo python3 manage.py collectstatic</code>打包静态文件到<code>collected_static</code>文件夹中，打包完成后退出服务器。<br><a href="http://image.tooltool.club/19858366-651dbb538c03e987.png" data-fancybox="group" data-caption="打包静态文件" class="fancybox"><img alt="打包静态文件" title="打包静态文件" data-src="http://image.tooltool.club/19858366-651dbb538c03e987.png" class="lazyload"></a></p></li></ul><h2 id="第三步：配置uWSGI"><a href="#第三步：配置uWSGI" class="headerlink" title="第三步：配置uWSGI"></a>第三步：配置uWSGI</h2><ul><li>在项目主目录下创建<code>uwsgi.ini</code>文件，然后在<code>uwsgi.ini</code>中写入图示代码，按<code>Ctrl + S</code>保存对<code>uwsgi.ini</code>文件的修改，并在主目录下创建名为<code>uwsgi</code>的文件夹。<br><a href="http://image.tooltool.club/19858366-56669643f7e6bf85.png" data-fancybox="group" data-caption="配置uWSGI" class="fancybox"><img alt="配置uWSGI" title="配置uWSGI" data-src="http://image.tooltool.club/19858366-56669643f7e6bf85.png" class="lazyload"></a><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 复制以下代码即可</span><br><span class="line">[uwsgi]</span><br><span class="line">socket &#x3D; 127.0.0.1:8080</span><br><span class="line">chdir &#x3D; &#x2F;home&#x2F;programs&#x2F;mysite</span><br><span class="line">module &#x3D; mysite.wsgi</span><br><span class="line">master &#x3D; ture</span><br><span class="line">processes &#x3D; 1</span><br><span class="line">threads &#x3D; 2</span><br><span class="line">max-requests &#x3D; 2000</span><br><span class="line">chmod-socket &#x3D; 664</span><br><span class="line">vacuum &#x3D; ture</span><br><span class="line"></span><br><span class="line">stats &#x3D; %(chdir)&#x2F;uwsgi&#x2F;uwsgi.status</span><br><span class="line">pidfile &#x3D; %(chdir)&#x2F;uwsgi&#x2F;uwsgi.pid</span><br><span class="line">daemonize &#x3D; %(chdir)&#x2F;uwsgi&#x2F;uwsgi.log</span><br></pre></td></tr></table></figure></div></li></ul><h2 id="第四步：配置Nginx"><a href="#第四步：配置Nginx" class="headerlink" title="第四步：配置Nginx"></a>第四步：配置Nginx</h2><ul><li>首先，我们再次登录远程服务器，执行命令<code>sudo vim /etc/nginx/nginx.conf</code>进入<code>nginx.conf</code>配置文件内，先删除<code>server</code>上面的一行代码，然后在修改<code>server</code>内的代码内容即可。<br><a href="http://image.tooltool.club/19858366-be05bd4d84d75ab3.png" data-fancybox="group" data-caption="配置Nginx" class="fancybox"><img alt="配置Nginx" title="配置Nginx" data-src="http://image.tooltool.club/19858366-be05bd4d84d75ab3.png" class="lazyload"></a></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 复制以下代码即可</span><br><span class="line"> server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name localhost;</span><br><span class="line">        charset utf-8;</span><br><span class="line"></span><br><span class="line">        location &#x2F; &#123;</span><br><span class="line">                uwsgi_pass 127.0.0.1:8000;</span><br><span class="line">                include &#x2F;etc&#x2F;nginx&#x2F;uwsgi_params;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location &#x2F;static &#123;</span><br><span class="line">                alias &#x2F;home&#x2F;programs&#x2F;collected_static&#x2F;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 404 &#x2F;404.html;</span><br><span class="line">            location &#x3D; &#x2F;40x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 500 502 503 504 &#x2F;50x.html;</span><br><span class="line">            location &#x3D; &#x2F;50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><h2 id="第五步：启动Nginx和uWSGI"><a href="#第五步：启动Nginx和uWSGI" class="headerlink" title="第五步：启动Nginx和uWSGI"></a>第五步：启动Nginx和uWSGI</h2><ul><li>首先，通过指令<code>cd /home/programs/mysite/</code>进入到<code>/home/programs/mysite/</code>路径下。</li><li>然后，执行命令<code>sudo uwsgi3 --ini uwsgi.ini</code>启动<code>uWSGI</code>。</li><li>接下来，执行命令<code>sudo systemctl start nginx</code>启动<code>Nginx</code>。</li><li>最后，我们可以在浏览器中输入我们的<code>公网ip</code>就可以查看我们的项目啦！<br><a href="http://image.tooltool.club/19858366-49289a7131170cff.png" data-fancybox="group" data-caption="启动Nginx和uWSGI" class="fancybox"><img alt="启动Nginx和uWSGI" title="启动Nginx和uWSGI" data-src="http://image.tooltool.club/19858366-49289a7131170cff.png" class="lazyload"></a></li></ul><h2 id="第六步：更新Django项目"><a href="#第六步：更新Django项目" class="headerlink" title="第六步：更新Django项目"></a>第六步：更新Django项目</h2><ul><li>当我们对我们的项目进行更改是，网页内容不会发生变化，此时我们需要重启我们的<code>uWSGI</code>服务。首先，登录远程服务器；然后，通过命令<code>cd /home/programs/mysite/uwsgi</code>进入到<code>/home/programs/mysite/uwsgi</code>路径下；最后，执行命令<code>sudo uwsgi3 --reload uwsgi.pid</code>即可重启我们的<code>uWSGI</code>服务。<br><a href="http://image.tooltool.club/19858366-771db904cdb09e84.png" data-fancybox="group" data-caption="重启uWSGI" class="fancybox"><img alt="重启uWSGI" title="重启uWSGI" data-src="http://image.tooltool.club/19858366-771db904cdb09e84.png" class="lazyload"></a></li></ul>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> Django </category>
          
          <category> 项目部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> Django </tag>
            
            <tag> 项目部署 </tag>
            
            <tag> 阿里云 </tag>
            
            <tag> Nginx </tag>
            
            <tag> uWSGI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>7、配置Django项目——Django项目部署到阿里云服务器</title>
      <link href="/2020/03/08/7%E3%80%81%E9%85%8D%E7%BD%AEDjango%E9%A1%B9%E7%9B%AE/"/>
      <url>/2020/03/08/7%E3%80%81%E9%85%8D%E7%BD%AEDjango%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="第一步：安装SFTP"><a href="#第一步：安装SFTP" class="headerlink" title="第一步：安装SFTP"></a>第一步：安装SFTP</h2><ul><li>首先，在桌面新建文件夹<code>mysite</code>，然后在VS Code中打开该文件夹，并按照相应操作安装<code>SFTP</code>，安装完成后，重启VS Code。<br><a href="http://image.tooltool.club/19858366-7f6219ca2ca7cca5.png" data-fancybox="group" data-caption="安装sftp" class="fancybox"><img alt="安装sftp" title="安装sftp" data-src="http://image.tooltool.club/19858366-7f6219ca2ca7cca5.png" class="lazyload"></a></li></ul><h2 id="第二步：修改文件夹权限"><a href="#第二步：修改文件夹权限" class="headerlink" title="第二步：修改文件夹权限"></a>第二步：修改文件夹权限</h2><ul><li>由于，我们使用learn用户对项目文件修改需要root权限，所以我们需要修改项目所在文件夹的访问权限。首先，我们使用learn用户远程登录服务器；然后，通过命令<code>cd /home/programs/</code>进入到<code>/home/programs/</code>路径下，我们可以通过<code>ls -al</code>查看文件的详细信息；最后，我们使用命令<code>sudo chown -R learn mysite</code>修改<code>mysite</code>文件夹及文件夹内所有文件的所有者。<br><a href="http://image.tooltool.club/19858366-1f24abe4f5dda6f8.png" data-fancybox="group" data-caption="修改文件夹权限" class="fancybox"><img alt="修改文件夹权限" title="修改文件夹权限" data-src="http://image.tooltool.club/19858366-1f24abe4f5dda6f8.png" class="lazyload"></a></li></ul><h2 id="第三步：同步本地和服务器"><a href="#第三步：同步本地和服务器" class="headerlink" title="第三步：同步本地和服务器"></a>第三步：同步本地和服务器</h2><ul><li><p>首先，按<code>Ctrl + Shift + P</code>或者在上方<code>View</code>选项中选择<code>Command Palette</code>进入命令面板，然后在命令面板中输入命令<code>SFTP:Config</code>，然后VS Code就会给我们自动正在<code>.vscode</code>文件夹中创建一个<code>sftp.json</code>的文件(如果没有显示的话可以刷新一下)。</p></li><li><p>接下来，我们要对<code>sftp.json</code>文件中的一些键值对进行设置，其中对一些键值也对进行说明，修改完后别忘了按<code>Ctrl + S</code>进行保存一下。<br><a href="http://image.tooltool.club/19858366-10b63eb3eb7b5f6c.png" data-fancybox="group" data-caption="修改sftp.json文件" class="fancybox"><img alt="修改sftp.json文件" title="修改sftp.json文件" data-src="http://image.tooltool.club/19858366-10b63eb3eb7b5f6c.png" class="lazyload"></a></p></li></ul><ul><li><p>键值对<code>&quot;host&quot;</code>后填写的是你服务器的公网ip。</p></li><li><p>键值对<code>&quot;port&quot;</code>后填写的端口号默认为<code>22</code>，但是由于我在之前修改了端口号为<code>12345</code>，所以我填写的端口号为<code>12345</code>。</p></li><li><p>键值对<code>&quot;username&quot;</code>后需要填写的是我们用来登录的用户名。</p></li><li><p>键值对<code>&quot;password&quot;</code>和键值对<code>&quot;privateKeyPath&quot;</code>两个需要自己进行创建，其中键值对<code>&quot;password&quot;</code>后需要填写用户密码，由于密码为明文，所以不是很安全，而键值对<code>&quot;privateKeyPath&quot;</code>后需要填写的是我们之前创建的私钥<code>learnfile</code>的路径，而这两个键值对只要添加一个就可以，也就是密码登录或者私钥登录均可。</p></li><li><p>键值对<code>&quot;ignore&quot;</code>需要自己创建，其后是一个列表，列表中包括一些同步过程中忽视同步的文件和文件夹。例如：<code>.vscode</code>文件夹内保存的使我们的本地配置文件，只需要存在本地即可，不需要从本地同步到服务器；<code>__pycache__</code>文件夹内保存的是python编译后的文件，只需要存在于服务器即可，不需要从服务器同步到本地。</p></li><li><p>键值对<code>&quot;syncOption&quot;</code>需要自己创建，其后是一个字典，字典中我们添加了一个<code>&quot;delete&quot;: true</code>的键值对，意思是，原本服务器为了防止本地误删文件，所以添加文件可以同步到服务器，删除文件无法同步到服务器，添加了此键值对后，删除的文件也可以同步到服务器，使服务器对应的文件也会删除。此键值对是否添加，完全取决于个人意愿。</p></li><li><p>键值对<code>&quot;watcher&quot;</code>需要自己创建，其后也是一个字典，由于每次对文件操作完成后，都需要右键选择同步本地到服务器或者同步服务器到本地，所以我们添加此键值对是为了方便，让系统监视我们所有操作，自动同步本地到服务器或者同步服务器到本地，字典中的默认键值对<code>&quot;autoUpload&quot;: true</code>表示我们修改或者添加文件都会自动同步到服务器上，默认键值对<code>&quot;autoDelete&quot;: false</code>则表示我们删除文件不会自动同步到服务器上，我们可以将<code>false</code>修改为<code>true</code>，当然也可以不修改。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> Django </category>
          
          <category> 项目部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> Django </tag>
            
            <tag> 项目部署 </tag>
            
            <tag> 阿里云 </tag>
            
            <tag> SFTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>6、安装测试Django——Django项目部署到阿里云服务器</title>
      <link href="/2020/03/08/6%E3%80%81%E5%AE%89%E8%A3%85%E6%B5%8B%E8%AF%95Django/"/>
      <url>/2020/03/08/6%E3%80%81%E5%AE%89%E8%A3%85%E6%B5%8B%E8%AF%95Django/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="第一步：安装Django"><a href="#第一步：安装Django" class="headerlink" title="第一步：安装Django"></a>第一步：安装Django</h2><ul><li>首先，我们登录服务器，然后使用<code>pip3</code>来进行安装，每次learn账户使用<code>pip3</code>命令需要<code>sudo</code>以超级管理员身份来执行，执行命令<code>sudo pip3 install django</code>就可以将Django安装成功啦！<a href="http://image.tooltool.club/19858366-ffdc60c552e5bd1c.png" data-fancybox="group" data-caption="安装Django" class="fancybox"><img alt="安装Django" title="安装Django" data-src="http://image.tooltool.club/19858366-ffdc60c552e5bd1c.png" class="lazyload"></a></li></ul><h2 id="第二步：将django-admin添加到环境变量"><a href="#第二步：将django-admin添加到环境变量" class="headerlink" title="第二步：将django-admin添加到环境变量"></a>第二步：将django-admin添加到环境变量</h2><ul><li>我们执行命令<code>sudo ln -s /usr/local/python3/bin/django-admin /usr/bin</code>创建链接，然后我们就可以使用<code>django-admin</code>命令了。<a href="http://image.tooltool.club/19858366-efd3571d08e92c7d.png" data-fancybox="group" data-caption="将django-admin添加到环境变量" class="fancybox"><img alt="将django-admin添加到环境变量" title="将django-admin添加到环境变量" data-src="http://image.tooltool.club/19858366-efd3571d08e92c7d.png" class="lazyload"></a></li></ul><h2 id="第三步：创建Django项目"><a href="#第三步：创建Django项目" class="headerlink" title="第三步：创建Django项目"></a>第三步：创建Django项目</h2><ul><li><p>首先，我们执行命令<code>cd /home/</code>进入到<code>/home/</code>路径下；然后，执行命令<code>sudo mkdir programs</code>创建一个文件夹<code>programs</code>用来存放我们的Django项目，通过命令<code>cd programs</code>进入<code>programs</code>路径下；最后，执行命令<code>sudo django-admin startproject mysite</code>创建Django项目，我们就成功创建了mysite的Django项目。<a href="http://image.tooltool.club/19858366-df5887eb9973b484.png" data-fancybox="group" data-caption="创建Django项目" class="fancybox"><img alt="创建Django项目" title="创建Django项目" data-src="http://image.tooltool.club/19858366-df5887eb9973b484.png" class="lazyload"></a></p></li><li><p>为了方便查看项目的目录结构，我们要用<code>yum</code>来安装一个工具<code>tree</code>，执行命令<code>sudo yum -y install tree</code>进行安装。安装完成后，我们就可以通过<code>tree</code>命令来查看我们项目的目录结构，命令行就会以树状结构显示我们当前文件夹下所有内容以及子文件夹的内容。<a href="http://image.tooltool.club/19858366-1f115d148cd53f03.png" data-fancybox="group" data-caption="安装tree" class="fancybox"><img alt="安装tree" title="安装tree" data-src="http://image.tooltool.club/19858366-1f115d148cd53f03.png" class="lazyload"></a></p></li><li><p>接下来，我们写一个简单地Django项目，测试一下我们安装的Django。首先，我们通过命令<code>cd mysite/mysite/</code>进入到<code>mysite/mysite/</code>路径下；然后，使用命令<code>sudo vim views.py</code>来创建一个<code>views.py</code>文件，并按照图示写入相关内容(其中<code>from</code>和<code>import</code>没有显示出来)；使用命令<code>sudo vim urls.py</code>进入<code>urls.py</code>文件中并修改部分图示内容(其中<code>from</code>和<code>import</code>没有显示出来)；使用命令使用命令<code>sudo vim settings.py</code>进入<code>settings.py</code>文件中，找到<code>ALLOWED_HOSTS = []</code>一行代码，然后修改为<code>ALLOWED_HOSTS = [&#39;localhost&#39;,&#39;你的公网ip&#39;]</code>在找到<code>DATABASES</code>也就是数据库相关的代码修改为如图所示。<br><a href="http://image.tooltool.club/19858366-cd2f0929c4664636.png" data-fancybox="group" data-caption="写一个简单地Django项目" class="fancybox"><img alt="写一个简单地Django项目" title="写一个简单地Django项目" data-src="http://image.tooltool.club/19858366-cd2f0929c4664636.png" class="lazyload"></a><br><a href="https://upload-images.jianshu.io/upload_images/19858366-4b68a48b131ad5b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" data-fancybox="group" data-caption="views.py文件" class="fancybox"><img alt="views.py文件" title="views.py文件" data-src="https://upload-images.jianshu.io/upload_images/19858366-4b68a48b131ad5b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload"></a><br><a href="https://upload-images.jianshu.io/upload_images/19858366-edf5866db0d8d148.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" data-fancybox="group" data-caption="urls.py文件" class="fancybox"><img alt="urls.py文件" title="urls.py文件" data-src="https://upload-images.jianshu.io/upload_images/19858366-edf5866db0d8d148.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload"></a><br><a href="https://upload-images.jianshu.io/upload_images/19858366-f149b8064c5cccc1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" data-fancybox="group" data-caption="settings.py文件" class="fancybox"><img alt="settings.py文件" title="settings.py文件" data-src="https://upload-images.jianshu.io/upload_images/19858366-f149b8064c5cccc1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload"></a></p></li><li><p>最后，我们需要通过命令<code>cd ..</code>返回父目录，然后执行命令<code>sudo python3 manage.py migrate</code>进行迁移数据库，迁移完成之后，我们可以通过命令<code>sudo python3 manage.py runserver 0.0.0.0:80</code>启动我们的项目，在浏览器直接输入我们的公网ip就可以查看我们的项目了，最后，可以通过<code>Ctrl + C</code>退出我们的项目。<br><a href="http://image.tooltool.club/19858366-315d1a74867ce497.png" data-fancybox="group" data-caption="启动Django项目" class="fancybox"><img alt="启动Django项目" title="启动Django项目" data-src="http://image.tooltool.club/19858366-315d1a74867ce497.png" class="lazyload"></a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> Django </category>
          
          <category> 项目部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> Django </tag>
            
            <tag> 项目部署 </tag>
            
            <tag> 阿里云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5、安装python3——Django项目部署到阿里云服务器</title>
      <link href="/2020/03/08/5%E3%80%81%E5%AE%89%E8%A3%85python3/"/>
      <url>/2020/03/08/5%E3%80%81%E5%AE%89%E8%A3%85python3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="第一步：查看python版本"><a href="#第一步：查看python版本" class="headerlink" title="第一步：查看python版本"></a>第一步：查看python版本</h2><ul><li>首先，我们远程登录服务器，由于CentOS本身是带有python的，所以我们可以通过命令<code>python --version</code>来查看当前CentOS中python的版本。<br><a href="http://image.tooltool.club/19858366-8dae1d3481c01940.png" data-fancybox="group" data-caption="查看python版本" class="fancybox"><img alt="查看python版本" title="查看python版本" data-src="http://image.tooltool.club/19858366-8dae1d3481c01940.png" class="lazyload"></a></li></ul><h2 id="第二步：下载并安装python3"><a href="#第二步：下载并安装python3" class="headerlink" title="第二步：下载并安装python3"></a>第二步：下载并安装python3</h2><ul><li><p>首先，我们需要使用命令<code>mkdir py3</code>在主目录下创建<code>py3</code>的文件夹，用来存放python3，然后，我们使用命令<code>cd py3</code>进入到<code>py3</code>文件夹路径中，接下来，在正式下载安装python3之前，我们还需要安装python的依赖环境，执行命令<code>sudo yum -y install openssl-devel bzip2-devel expat-devel gdbm-devel readline-devel sqlite-devel zlib-devel libffi-devel MySQL-python mysql-devel</code>就可以安装，由于要安装的依赖环境比较多，所以大家要细心一点不要落下任何一个，不然后期安装python3过程中会出现一些错误。<a href="http://image.tooltool.club/19858366-d101e519474fb147.png" data-fancybox="group" data-caption="安装python的依赖环境" class="fancybox"><img alt="安装python的依赖环境" title="安装python的依赖环境" data-src="http://image.tooltool.club/19858366-d101e519474fb147.png" class="lazyload"></a></p></li><li><p>接下来，我们来正式安装python，我们首先进入python的官网<a href="https://www.python.org/ftp/python/" target="_blank" rel="noopener">python的官网</a>，在这个网站中我们可以看到python的所有版本，我们找到我们需要下载的版本号。然后我们点击进入该版本的详情页，我们找到<a href="https://www.python.org/ftp/python/3.8.1/Python-3.8.1.tgz" target="_blank" rel="noopener">Python-3.x.x.tgz</a>，然后单击鼠标右键选择<code>复制链接地址</code>。<br><a href="http://image.tooltool.club/19858366-2dbe2dea9c523439.png" data-fancybox="group" data-caption="复制下载链接地址" class="fancybox"><img alt="复制下载链接地址" title="复制下载链接地址" data-src="http://image.tooltool.club/19858366-2dbe2dea9c523439.png" class="lazyload"></a></p></li></ul><ul><li><p>然后，我们在<code>py3</code>路径下执行命令<code>wget 链接地址</code>就可以下载python3了，紧接着我们对下载的python3进行解压，执行解压命令<code>tar -zxvf Python-3.8.1.tgz</code>就可以进行解压，解压完成文件夹中就会多了一个文件夹<code>Python-3.8.1</code>。<a href="http://image.tooltool.club/19858366-275514593363e4d9.png" data-fancybox="group" data-caption="下载python3" class="fancybox"><img alt="下载python3" title="下载python3" data-src="http://image.tooltool.club/19858366-275514593363e4d9.png" class="lazyload"></a></p></li><li><p>接下来，我们要安装python3，所以我们先执行命令<code>cd /usr/local</code>进入<code>/usr/local</code>路径下，然后执行命令<code>sudo mkdir python3</code>创建一个名为<code>python3</code>的文件夹，然后通过命令<code>cd ~/py3/Python-3.8.1</code>回到路径<code>~/py3/Python-3.8.1</code>下。最后，执行命令<code>./configure --prefix=/usr/local/python3/</code>修改安装路径为<code>/usr/local/python3/</code>。<a href="http://image.tooltool.club/19858366-d9c35dc624013265.png" data-fancybox="group" data-caption="修改安装路径" class="fancybox"><img alt="修改安装路径" title="修改安装路径" data-src="http://image.tooltool.club/19858366-d9c35dc624013265.png" class="lazyload"></a></p></li><li><p>最后，我们先执行命令<code>make</code>对python3进行编译，再执行命令<code>sudo make install</code>来安装python3，到此python3就安装完成了。</p></li></ul><h2 id="第三步：添加python3和pip到环境变量"><a href="#第三步：添加python3和pip到环境变量" class="headerlink" title="第三步：添加python3和pip到环境变量"></a>第三步：添加python3和pip到环境变量</h2><ul><li><p>首先，我们通过命令<code>cd /usr/local/python3/</code>进入到路径<code>/usr/local/python3/</code>下，然后执行命令<code>sudo ln -s /usr/local/python3/bin/python3 /usr/bin/python3</code>创建链接，到此为止，我们就可知直接使用<code>python3</code>的命令进入<code>python3</code>环境下，接下来我们可以用命令<code>sudo ln -s /usr/local/python3/bin/pip3 /usr/bin/pip3</code>创建链接，然后就可以使用<code>pip3</code>命令进行安装了，我们可以顺便使用<code>pip3</code>执行命令<code>sudo pip3 install mysqlclient</code>安装一下<code>mysqlclient</code>。<a href="http://image.tooltool.club/19858366-52223e0d7e30fcc0.png" data-fancybox="group" data-caption="添加python3和pip到环境变量" class="fancybox"><img alt="添加python3和pip到环境变量" title="添加python3和pip到环境变量" data-src="http://image.tooltool.club/19858366-52223e0d7e30fcc0.png" class="lazyload"></a></p></li><li><p>最后，我们可以通过<code>cd ~</code>回到主目录下，把主目录下的<code>py3</code>整个文件夹通过命令<code>sudo rm -rf py3</code>删除掉就可以了。<a href="http://image.tooltool.club/19858366-7d4eb5cbf4446f5f.png" data-fancybox="group" data-caption="删除py3文件夹" class="fancybox"><img alt="删除py3文件夹" title="删除py3文件夹" data-src="http://image.tooltool.club/19858366-7d4eb5cbf4446f5f.png" class="lazyload"></a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> Django </category>
          
          <category> 项目部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> Django </tag>
            
            <tag> 项目部署 </tag>
            
            <tag> 阿里云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4、安装数据库——Django项目部署到阿里云服务器</title>
      <link href="/2020/03/08/4%E3%80%81%E5%AE%89%E8%A3%85%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2020/03/08/4%E3%80%81%E5%AE%89%E8%A3%85%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="第一步：安装mariadb和mariadb-server"><a href="#第一步：安装mariadb和mariadb-server" class="headerlink" title="第一步：安装mariadb和mariadb-server"></a>第一步：安装mariadb和mariadb-server</h2><ul><li>首先登陆远程服务器，使用<code>yum</code>安装<code>mariadb</code>和<code>mariadb-server</code>，执行命令<code>sudo yum -y install mariadb mariadb-server</code>来安装<code>mariadb</code>和<code>mariadb-server</code>，然后输入密码就可以直接安装了。<a href="http://image.tooltool.club/19858366-63c663ad0ede48cc.png" data-fancybox="group" data-caption="安装mariadb和mariadb-server" class="fancybox"><img alt="安装mariadb和mariadb-server" title="安装mariadb和mariadb-server" data-src="http://image.tooltool.club/19858366-63c663ad0ede48cc.png" class="lazyload"></a></li></ul><h2 id="第二步：设置数据库服务"><a href="#第二步：设置数据库服务" class="headerlink" title="第二步：设置数据库服务"></a>第二步：设置数据库服务</h2><ul><li><p>首先，执行命令<code>sudo systemctl start mariadb</code>就可以成功启动数据库啦。</p></li><li><p>然后，执行命令<code>sudo systemctl enable mariadb.service</code>就设置完成数据库开机自动启动了。<a href="http://image.tooltool.club/19858366-cdd6b55d6209ffe0.png" data-fancybox="group" data-caption="启动数据库并设置自动启动" class="fancybox"><img alt="启动数据库并设置自动启动" title="启动数据库并设置自动启动" data-src="http://image.tooltool.club/19858366-cdd6b55d6209ffe0.png" class="lazyload"></a></p></li><li><p>接下来，我们要设置数据库root用户的密码，执行命令<code>mysql_secure_installation</code>后，系统会提示我们输入当前root用户的密码，由于我们还没有设置密码，可以回车跳过，然后提示我们是否设置root用户密码，按<code>y</code>确认，最后输入两次新密码然后一路回车就完成了(注意：本步设置的是数据库root用户密码，与服务器root用户无关)。<a href="http://image.tooltool.club/19858366-4e2486bd12ce0d5f.png" data-fancybox="group" data-caption="设置数据库root用户密码" class="fancybox"><img alt="设置数据库root用户密码" title="设置数据库root用户密码" data-src="http://image.tooltool.club/19858366-4e2486bd12ce0d5f.png" class="lazyload"></a></p></li><li><p>最后，我们就可以进入我们的数据库了，通过命令<code>mysql -u root -p</code>然后输入数据库root用户的密码我们就可以进入我们的数据库了。接下来显示的是数据库的命令行模式，我们可以输入命令<code>create database mysite;</code>(别忘了分号)，然后我们就创建了mysite的数据库，最后我们可以通过命令<code>exit;</code>退出数据库。<a href="http://image.tooltool.club/19858366-7ab199b2327b2ca3.png" data-fancybox="group" data-caption="进入数据库" class="fancybox"><img alt="进入数据库" title="进入数据库" data-src="http://image.tooltool.club/19858366-7ab199b2327b2ca3.png" class="lazyload"></a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> Django </category>
          
          <category> 项目部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> Django </tag>
            
            <tag> 项目部署 </tag>
            
            <tag> 阿里云 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3、设置防火墙和端口——Django项目部署到阿里云服务器</title>
      <link href="/2020/03/08/3%E3%80%81%E8%AE%BE%E7%BD%AE%E9%98%B2%E7%81%AB%E5%A2%99%E5%92%8C%E7%AB%AF%E5%8F%A3/"/>
      <url>/2020/03/08/3%E3%80%81%E8%AE%BE%E7%BD%AE%E9%98%B2%E7%81%AB%E5%A2%99%E5%92%8C%E7%AB%AF%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="①设置防火墙"><a href="#①设置防火墙" class="headerlink" title="①设置防火墙"></a>①设置防火墙</h1><h2 id="第一步：更新yum功能"><a href="#第一步：更新yum功能" class="headerlink" title="第一步：更新yum功能"></a>第一步：更新yum功能</h2><ul><li><p>远程登录服务器，执行命令<code>yum update</code>可以进行更新，但是此时登录的是learn账户，会显示没有root权限，所以我们执行命令<code>sudo yum update</code>进行更新，其中<code>sudo</code>的意思是后面的命令会以超级管理员的身份执行，然后输入learn账户的密码就可以进行更新，但执行过程中会提示我们是否继续更新，输入<code>y</code>即可继续更新。</p></li><li><p>我们也可以通过命令<code>sudo yum -y update</code>进行更新，<code>-y</code>表示如果更新过程中需要我们输入<code>y</code>继续的话，系统会自动输入，不用我们手动输入。<a href="http://image.tooltool.club/19858366-e5222c114bc360de.png" data-fancybox="group" data-caption="更新yum功能" class="fancybox"><img alt="更新yum功能" title="更新yum功能" data-src="http://image.tooltool.club/19858366-e5222c114bc360de.png" class="lazyload"></a></p></li></ul><h2 id="第二步：使用yum安装插件并启动服务"><a href="#第二步：使用yum安装插件并启动服务" class="headerlink" title="第二步：使用yum安装插件并启动服务"></a>第二步：使用yum安装插件并启动服务</h2><ul><li>learn用户使用<code>yum</code>安装插件都需要添加<code>sudo</code>以超级管理员身份执行命令，执行命令<code>sudo yum install -y cronie yum-cron</code>安装<code>cronie</code>和<code>yum-cron</code>插件。<a href="http://image.tooltool.club/19858366-70b9bfaa6b2cf6d8.png" data-fancybox="group" data-caption="使用yum安装插件" class="fancybox"><img alt="使用yum安装插件" title="使用yum安装插件" data-src="http://image.tooltool.club/19858366-70b9bfaa6b2cf6d8.png" class="lazyload"></a></li></ul><ul><li><p>learn用户使用<code>vim</code>安装插件都需要添加<code>sudo</code>以超级管理员身份执行命令，执行命令<code>sudo vim /etc/yum/yum-cron.conf</code>打开配置文件<code>yum-cron.conf</code>，并将配置文件中的<code>apply_updates = no</code>改为<code>apply_updates = yes</code>，目的是打开自动更新功能。<a href="http://image.tooltool.club/19858366-2d29510ae15baec2.png" data-fancybox="group" data-caption="修改配置文件yum-cron.conf" class="fancybox"><img alt="修改配置文件yum-cron.conf" title="修改配置文件yum-cron.conf" data-src="http://image.tooltool.club/19858366-2d29510ae15baec2.png" class="lazyload"></a></p></li><li><p>执行命令<code>sudo systemctl start crond</code>和命令 <code>sudo systemctl start yum-cron</code>启动<code>crond</code>和<code>yum-cron</code>服务。<a href="http://image.tooltool.club/19858366-69c6831f793327fb.png" data-fancybox="group" data-caption="启动crond和yum-cron服务" class="fancybox"><img alt="启动crond和yum-cron服务" title="启动crond和yum-cron服务" data-src="http://image.tooltool.club/19858366-69c6831f793327fb.png" class="lazyload"></a></p></li></ul><h2 id="第三步：使用yum安装并启动防火墙服务"><a href="#第三步：使用yum安装并启动防火墙服务" class="headerlink" title="第三步：使用yum安装并启动防火墙服务"></a>第三步：使用yum安装并启动防火墙服务</h2><ul><li><p>执行命令<code>sudo yum install -y firewalld</code>安装防火墙，如果已经安装它会显示已安装并且是最新版本无需任何处理。</p></li><li><p>然后执行命令<code>sudo systemctl start firewalld.service</code>启动防火墙服务，并通过命令<code>sudo firewall-cmd --list-all</code>来查看防火墙状态。(关于服务器的更多操作命令，可以查看我之前的文章：<a href="https://www.jianshu.com/p/3fd584cadfef" target="_blank" rel="noopener">《CentOS7使用firewalld打开关闭防火墙与端口》</a>)<a href="http://image.tooltool.club/19858366-f3dbd5f72c8766bc.png" data-fancybox="group" data-caption="安装并启动防火墙服务" class="fancybox"><img alt="安装并启动防火墙服务" title="安装并启动防火墙服务" data-src="http://image.tooltool.club/19858366-f3dbd5f72c8766bc.png" class="lazyload"></a></p></li></ul><h1 id="②设置端口"><a href="#②设置端口" class="headerlink" title="②设置端口"></a>②设置端口</h1><h2 id="第一步-修改ssh相关的配置文件"><a href="#第一步-修改ssh相关的配置文件" class="headerlink" title="第一步:修改ssh相关的配置文件"></a>第一步:修改ssh相关的配置文件</h2><ul><li><p>执行命令<code>sudo vim /etc/ssh/sshd_config</code>打开配置文件<code>sshd_config</code>，找到<code>#Port 22</code>所在的一行，并修改为<code>Port 12345</code>(此处端口可以修改为<code>1024-65535</code>之间的端口均可)，最后保存并退出。<a href="http://image.tooltool.club/19858366-4b2ea121cf7fc016.png" data-fancybox="group" data-caption="修改sshd_config配置文件" class="fancybox"><img alt="修改sshd_config配置文件" title="修改sshd_config配置文件" data-src="http://image.tooltool.club/19858366-4b2ea121cf7fc016.png" class="lazyload"></a></p></li><li><p>执行命令<code>sudo cp /usr/lib/firewalld/services/ssh.xml /etc/firewalld/services/</code>将防火墙中关于ssh的配置文件拷贝出来，然后执行<code>sudo vim /etc/firewalld/services/ssh.xml</code>打开配置文件<code>ssh.xml</code>，然后找到 <code>port=&quot;22&quot;</code>并修改为 <code>port=&quot;12345&quot;</code>，最后保存并退出。<a href="http://image.tooltool.club/19858366-a9601dbc68bfa5c3.png" data-fancybox="group" data-caption="修改ssh.xml配置文件" class="fancybox"><img alt="修改ssh.xml配置文件" title="修改ssh.xml配置文件" data-src="http://image.tooltool.club/19858366-a9601dbc68bfa5c3.png" class="lazyload"></a></p></li></ul><h2 id="第二步-修改安全组中的配置规则"><a href="#第二步-修改安全组中的配置规则" class="headerlink" title="第二步:修改安全组中的配置规则"></a>第二步:修改安全组中的配置规则</h2><p><a href="http://image.tooltool.club/19858366-7e129f68ab0653c2.png" data-fancybox="group" data-caption="安全组的配置规则" class="fancybox"><img alt="安全组的配置规则" title="安全组的配置规则" data-src="http://image.tooltool.club/19858366-7e129f68ab0653c2.png" class="lazyload"></a></p><p><a href="http://image.tooltool.club/19858366-2aac5cfbe5c96573.png" data-fancybox="group" data-caption="添加安全组规则" class="fancybox"><img alt="添加安全组规则" title="添加安全组规则" data-src="http://image.tooltool.club/19858366-2aac5cfbe5c96573.png" class="lazyload"></a></p><h2 id="第三步：重启防火墙服务和sshd服务"><a href="#第三步：重启防火墙服务和sshd服务" class="headerlink" title="第三步：重启防火墙服务和sshd服务"></a>第三步：重启防火墙服务和sshd服务</h2><ul><li><p>重启防火墙需要在浏览器，因为重启防火墙和ssh服务，这两个服务重启会导致与本地断开连接。<a href="http://image.tooltool.club/19858366-5a0f69624c5ced50.png" data-fancybox="group" data-caption="image.png" class="fancybox"><img alt="image.png" title="image.png" data-src="http://image.tooltool.club/19858366-5a0f69624c5ced50.png" class="lazyload"></a></p></li><li><p>首先登陆learn用户，然后输入命令<code>sudo systemctl restart sshd.service</code>重启sshd服务，输入命令<code>sudo systemctl restart firewalld.service</code>重启防火墙服务。最后输入<code>exit</code>命令执行退出登录。<a href="http://image.tooltool.club/19858366-dedc4b700ca249e8.png" data-fancybox="group" data-caption="重启防火墙服务和sshd服务" class="fancybox"><img alt="重启防火墙服务和sshd服务" title="重启防火墙服务和sshd服务" data-src="http://image.tooltool.club/19858366-dedc4b700ca249e8.png" class="lazyload"></a></p></li></ul><h2 id="第四步：修改本地config配置文件"><a href="#第四步：修改本地config配置文件" class="headerlink" title="第四步：修改本地config配置文件"></a>第四步：修改本地config配置文件</h2><ul><li><p>首先打开电脑终端PowerShell，输入<code>cd .ssh</code>进入<code>.ssh</code>路径下。Mac用户可直接输入命令<code>vim config</code>修改<code>config</code>配置文件，将端口号改为<code>12345</code>；Windows用户则直接输入命令<code>notepad config</code>修改<code>config</code>配置文件，将端口号改为<code>12345</code>。<a href="http://image.tooltool.club/19858366-ae160e2bc17eab76.png" data-fancybox="group" data-caption="修改本地config配置文件" class="fancybox"><img alt="修改本地config配置文件" title="修改本地config配置文件" data-src="http://image.tooltool.club/19858366-ae160e2bc17eab76.png" class="lazyload"></a></p></li><li><p>最后，我们又可以通过命令<code>ssh learn</code>登录远程服务器啦！<a href="http://image.tooltool.club/19858366-f8faadd1bbe7d55b.png" data-fancybox="group" data-caption="重新登录测试" class="fancybox"><img alt="重新登录测试" title="重新登录测试" data-src="http://image.tooltool.club/19858366-f8faadd1bbe7d55b.png" class="lazyload"></a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> Django </category>
          
          <category> 项目部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> Django </tag>
            
            <tag> 项目部署 </tag>
            
            <tag> 阿里云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2、设置登录证书——Django项目部署到阿里云服务器</title>
      <link href="/2020/03/08/2%E3%80%81%E8%AE%BE%E7%BD%AE%E7%99%BB%E5%BD%95%E8%AF%81%E4%B9%A6/"/>
      <url>/2020/03/08/2%E3%80%81%E8%AE%BE%E7%BD%AE%E7%99%BB%E5%BD%95%E8%AF%81%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="第一步：创建证书-公钥文件和私钥文件"><a href="#第一步：创建证书-公钥文件和私钥文件" class="headerlink" title="第一步：创建证书(公钥文件和私钥文件)"></a>第一步：创建证书(公钥文件和私钥文件)</h2><ul><li><p>直接打开PowerShell(不用登录ssh)，输入命令<code>ls</code>(如果为Mac用户，输入<code>ls</code>仅显示一般文件，需要输入<code>ls -a</code>才能显示隐藏文件)，我们会发现存在文件<code>.ssh</code>，如果没有<code>.ssh</code>文件则需要通过命令<code>mkdir .ssh</code>创建.ssh文件，如果存在<code>.ssh</code>文件则忽略该操作。<a href="http://image.tooltool.club/19858366-efd6ed52a0a43d80.png" data-fancybox="group" data-caption="查看.ssh文件" class="fancybox"><img alt="查看.ssh文件" title="查看.ssh文件" data-src="http://image.tooltool.club/19858366-efd6ed52a0a43d80.png" class="lazyload"></a></p></li><li><p>首先使用命令<code>cd .ssh</code>进入<code>.ssh</code>路径下，使用命令<code>ssh-keygen -t rsa -C learn -f learnfile</code>生成证书，之后所有提示输入内容直接回车跳过，最后通过<code>ls</code>查看文件夹下的文件会发现多了<code>learnfile</code>(私钥)和<code>learnfile.pub</code>(公钥)两个文件。<a href="http://image.tooltool.club/19858366-ce312b758b11787c.png" data-fancybox="group" data-caption="创建证书" class="fancybox"><img alt="创建证书" title="创建证书" data-src="http://image.tooltool.club/19858366-ce312b758b11787c.png" class="lazyload"></a></p></li></ul><h2 id="第二步：将公钥文件-learnfile-pub-上传到服务器"><a href="#第二步：将公钥文件-learnfile-pub-上传到服务器" class="headerlink" title="第二步：将公钥文件(learnfile.pub)上传到服务器"></a>第二步：将公钥文件(learnfile.pub)上传到服务器</h2><ul><li>仍保持在<code>.ssh</code>路径下，执行命令<code>scp learnfile.pub learn@你的公网ip:.</code>(不要忘记冒号和点)，然后按照提示输入learn用户的密码，等待进度达到百分之百即表示上传完成。<a href="http://image.tooltool.club/19858366-cb428dd52602ea7d.png" data-fancybox="group" data-caption="将公钥文件上传到服务器" class="fancybox"><img alt="将公钥文件上传到服务器" title="将公钥文件上传到服务器" data-src="http://image.tooltool.club/19858366-cb428dd52602ea7d.png" class="lazyload"></a></li></ul><h2 id="第三步-登录服务器进行设置"><a href="#第三步-登录服务器进行设置" class="headerlink" title="第三步:登录服务器进行设置"></a>第三步:登录服务器进行设置</h2><ul><li><p>首先使用learn用户登录服务器，<code>ls</code>命令查看文件会发现刚才上传的learnfile.pub文件，然后使用<code>ls -a</code>查看所有文件，发现没有<code>.ssh</code>文件。</p></li><li><p>通过命令<code>mkdir .ssh</code>创建<code>.ssh</code>文件夹，再次查看所有文件就会发现<code>.ssh</code>文件了，然后通过命令<code>cd .ssh</code>进入<code>.ssh</code>文件路径下，通过命令<code>touch authorized_keys</code>创建<code>authorized_keys</code>(文件名称一定不也打错，图中是错误的)文件。</p></li><li><p>通过命令<code>cd ..</code>返回.ssh的父文件夹，执行命令<code>cat learnfile.pub &gt;&gt; ~/.ssh/authorized_keys</code>将<code>learnfile.pub</code>写入<code>authorized_keys</code>文件中，写完之后我们可以通过命令 <code>rm learnfile.pub</code>删除<code>learnfile.pub</code>(公钥文件)。 <a href="http://image.tooltool.club/19858366-6084cd87ace694e3.png" data-fancybox="group" data-caption="登录服务器进行设置" class="fancybox"><img alt="登录服务器进行设置" title="登录服务器进行设置" data-src="http://image.tooltool.club/19858366-6084cd87ace694e3.png" class="lazyload"></a></p></li></ul><h2 id="第四步-修改证书文件夹的权限"><a href="#第四步-修改证书文件夹的权限" class="headerlink" title="第四步:修改证书文件夹的权限"></a>第四步:修改证书文件夹的权限</h2><ul><li><p>通过命令<code>ls -al</code>查看文件的详细信息，会发现<code>.ssh</code>文件的访问权限为drwxr-xr-x，其中d表示这是个文件夹，剩下的9个字符可以分成三组rwx/r-x/r-x，每三个一组。第一组表示对于该文件夹的所有者也就是learn，可读可写可执行；第二组表示对于adminuser用户组内所有的用户可读不可写可执行；第三组表示对于除了该文件夹的所有者和adminuser用户组内所有的用户的其他用户可读不可写可执行。</p></li><li><p>我们接下来的目的是修改<code>.ssh</code>文件夹和<code>authorrized_keys</code>文件的访问权限仅对文件所有者有权限。</p></li><li><p>执行命令<code>chmod 700 .ssh</code>修改.ssh文件夹的访问权限，通过命令<code>cd .ssh</code>进入<code>.ssh</code>文件路径下，再通过命令<code>ls -al</code>查看文件的详细信息，执行命令<code>chmod 600 authorrized_keys</code>修改<code>authorrized_keys</code>文件的访问权限，最后退出服务器登录。<a href="http://image.tooltool.club/19858366-be70dc74533c99ad.png" data-fancybox="group" data-caption="修改证书文件夹的权限" class="fancybox"><img alt="修改证书文件夹的权限" title="修改证书文件夹的权限" data-src="http://image.tooltool.club/19858366-be70dc74533c99ad.png" class="lazyload"></a></p></li></ul><h2 id="第五步-创建配置文件"><a href="#第五步-创建配置文件" class="headerlink" title="第五步:创建配置文件"></a>第五步:创建配置文件</h2><ul><li><p>退出登录后，首先我们可以通过命令<code>rm learnfile.pub</code>删除<code>learnfile.pub</code>(公钥文件)，然后创建配置文件<code>config</code>文件。</p></li><li><p>Mac用户可以直接通过命令<code>vim config</code>就可以创建并进入<code>config</code>文件，并在config文件中写入以下内容。<a href="http://image.tooltool.club/19858366-ecc5ea8eb212a9bf.png" data-fancybox="group" data-caption="config文件中写入的内容" class="fancybox"><img alt="config文件中写入的内容" title="config文件中写入的内容" data-src="http://image.tooltool.club/19858366-ecc5ea8eb212a9bf.png" class="lazyload"></a></p></li><li><p>Windows用户可以在桌面新建文本文档<code>config.txt</code>并写入以上内容。然后在PoverShell中，通过命令<code>cd Desktop</code>进入到桌面路径下，<code>ls</code>便会发现<code>config.txt</code>文件，执行命令<code>mv config.txt ~\.ssh</code>便可以将文件移动到<code>.ssh</code>文件夹下。<a href="http://image.tooltool.club/19858366-92c784a88ccee2e0.png" data-fancybox="group" data-caption="创建配置文件" class="fancybox"><img alt="创建配置文件" title="创建配置文件" data-src="http://image.tooltool.club/19858366-92c784a88ccee2e0.png" class="lazyload"></a></p></li><li><p>Windows用户然后通过<code>cd ..</code>返回到父文件夹，再通过命令<code>cd .ssh</code>进入<code>.ssh</code>路径下，会发现存在文件<code>config.txt</code>，再通过命令<code>mv config.txt config</code>就可以将<code>config.txt</code>文件保存为<code>config</code>文件。<a href="http://image.tooltool.club/19858366-b41caeede3f98f0f.png" data-fancybox="group" data-caption="创建配置文件" class="fancybox"><img alt="创建配置文件" title="创建配置文件" data-src="http://image.tooltool.club/19858366-b41caeede3f98f0f.png" class="lazyload"></a></p></li><li><p>最后我们就直接可以通过命令<code>ssh learn</code>来登录我们的远程服务器了，而且不需要输入密码。<a href="http://image.tooltool.club/19858366-f8faadd1bbe7d55b.png" data-fancybox="group" data-caption="登录示例图" class="fancybox"><img alt="登录示例图" title="登录示例图" data-src="http://image.tooltool.club/19858366-f8faadd1bbe7d55b.png" class="lazyload"></a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> Django </category>
          
          <category> 项目部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> Django </tag>
            
            <tag> 项目部署 </tag>
            
            <tag> 阿里云 </tag>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1、设置用户和组——Django项目部署到阿里云服务器</title>
      <link href="/2020/03/08/1%E3%80%81%E8%AE%BE%E7%BD%AE%E7%94%A8%E6%88%B7%E5%92%8C%E7%BB%84/"/>
      <url>/2020/03/08/1%E3%80%81%E8%AE%BE%E7%BD%AE%E7%94%A8%E6%88%B7%E5%92%8C%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="第一步：登录远程服务器"><a href="#第一步：登录远程服务器" class="headerlink" title="第一步：登录远程服务器"></a>第一步：登录远程服务器</h2><h5 id="方法一：在浏览器进行登录"><a href="#方法一：在浏览器进行登录" class="headerlink" title="方法一：在浏览器进行登录"></a>方法一：在浏览器进行登录</h5><ul><li>在实例列表中找到相应的服务器，然后在远程连接中选择VNC打开管理终端。<a href="http://image.tooltool.club/19858366-f441fcc66c428d7e.png" data-fancybox="group" data-caption="实例列表" class="fancybox"><img alt="实例列表" title="实例列表" data-src="http://image.tooltool.club/19858366-f441fcc66c428d7e.png" class="lazyload"></a></li><li>打开管理终端后，记住初始密码，并输入初始密码进入管理终端，输入账号root再输入密码即可以root用户的身份登录远程服务器，最后可以使用命令<code>exit</code>退出登录。<a href="http://image.tooltool.club/19858366-155a9e3744457cbd.png" data-fancybox="group" data-caption="浏览器登录远程服务器" class="fancybox"><img alt="浏览器登录远程服务器" title="浏览器登录远程服务器" data-src="http://image.tooltool.club/19858366-155a9e3744457cbd.png" class="lazyload"></a></li></ul><h5 id="方法二：在本地进行登录-需要查看电脑是否安装OpenSSH客户端"><a href="#方法二：在本地进行登录-需要查看电脑是否安装OpenSSH客户端" class="headerlink" title="方法二：在本地进行登录(需要查看电脑是否安装OpenSSH客户端)"></a>方法二：在本地进行登录(需要<a href="https://www.jianshu.com/p/efa0e0d71637" target="_blank" rel="noopener">查看电脑是否安装OpenSSH客户端</a>)</h5><ul><li>按住键盘<code>win + R</code>键然后输入<code>powershell</code>进入PowerShell输入<code>ssh root@你的公网ip</code>然后输入密码即可以root用户的身份登录远程服务器。<a href="http://image.tooltool.club/19858366-82ef2059df2bdd48.png" data-fancybox="group" data-caption="本地登录远程服务器" class="fancybox"><img alt="本地登录远程服务器" title="本地登录远程服务器" data-src="http://image.tooltool.club/19858366-82ef2059df2bdd48.png" class="lazyload"></a></li></ul><h2 id="第二步：创建用户和组"><a href="#第二步：创建用户和组" class="headerlink" title="第二步：创建用户和组"></a>第二步：创建用户和组</h2><ul><li>通过命令<code>groupadd adminuser</code>创建adminuser组。</li><li>然后通过命令<code>useradd learn -g adminuser</code>创建用户learn并将用户learn添加至adminuser组中。</li><li>最后通过命令<code>passwd learn</code>进行用户learn密码的设置，输入两遍密码后，密码便设置完成。</li><li>最后使用命令<code>exit</code>退出登录，然后登录新的用户进行登录。<a href="http://image.tooltool.club/19858366-6d3a61059bc68b95.png" data-fancybox="group" data-caption="创建用户和组" class="fancybox"><img alt="创建用户和组" title="创建用户和组" data-src="http://image.tooltool.club/19858366-6d3a61059bc68b95.png" class="lazyload"></a></li></ul><h2 id="第三步：修改新用户的权限-使用root用户操作"><a href="#第三步：修改新用户的权限-使用root用户操作" class="headerlink" title="第三步：修改新用户的权限(使用root用户操作)"></a>第三步：修改新用户的权限(使用root用户操作)</h2><ul><li><p>首先输入命令<code>cd /etc</code>切换路径至<code>/etc</code>路径下，并通过ls命令显示该路径文件夹下的所有内容，然后通过命令<code>vim sudoers</code>进入<code>sudoers</code>文件。<a href="http://image.tooltool.club/19858366-ff06ef6da5c32d66.png" data-fancybox="group" data-caption="/etc/路径下文件" class="fancybox"><img alt="/etc/路径下文件" title="/etc/路径下文件" data-src="http://image.tooltool.club/19858366-ff06ef6da5c32d66.png" class="lazyload"></a></p></li><li><p>进去<code>sudoers</code>文件后找到root一行，按i键进入编辑模式，在root的下一行添加<code>learn  ALL=(ALL)  ALL</code>这一行代码，然后按<code>Esc</code>退出编辑模式。<a href="http://image.tooltool.club/19858366-e33742d82a06ae35.png" data-fancybox="group" data-caption="sudoers文件" class="fancybox"><img alt="sudoers文件" title="sudoers文件" data-src="http://image.tooltool.club/19858366-e33742d82a06ae35.png" class="lazyload"></a></p></li><li><p>并按<code>Shift + ；</code>键，并输入<code>wq!</code>按回车键即可强制保存并退出文件。<a href="http://image.tooltool.club/19858366-26fcdeb05dec5d1f.png" data-fancybox="group" data-caption="强制保存并退出文件" class="fancybox"><img alt="强制保存并退出文件" title="强制保存并退出文件" data-src="http://image.tooltool.club/19858366-26fcdeb05dec5d1f.png" class="lazyload"></a></p></li></ul><h2 id="第四步：禁止root账号进行ssh远程登录"><a href="#第四步：禁止root账号进行ssh远程登录" class="headerlink" title="第四步：禁止root账号进行ssh远程登录"></a>第四步：禁止root账号进行ssh远程登录</h2><ul><li><p>首先输入命令<code>cd /etc/ssh</code>切换路径至<code>/etc/ssh</code>路径下，并通过<code>ls</code>命令显示该路径文件夹下的所有内容，然后通过命令<code>vim sshd_config</code>进入<code>sshd_config</code>文件。<a href="http://image.tooltool.club/19858366-2613b41264c589f7.png" data-fancybox="group" data-caption="/ssh/路径下文件" class="fancybox"><img alt="/ssh/路径下文件" title="/ssh/路径下文件" data-src="http://image.tooltool.club/19858366-2613b41264c589f7.png" class="lazyload"></a></p></li><li><p>进去<code>sshd_config</code>文件后找到<code>#PermitRootLogin yes</code>一行代码，按i键进入编辑模式，并将本行代码修改为<code>PermitRootLogin no</code>，注意别忘了去掉#号，然后按<code>Esc</code>退出编辑模式。<a href="http://image.tooltool.club/19858366-565288addb51576d.png" data-fancybox="group" data-caption="sshd_config文件" class="fancybox"><img alt="sshd_config文件" title="sshd_config文件" data-src="http://image.tooltool.club/19858366-565288addb51576d.png" class="lazyload"></a></p></li><li><p>并按<code>Shift + ；</code>键，并输入<code>wq</code>按回车键即可保存并退出文件。</p></li><li><p>修改完配置文件后，需要通过命令<code>systemctl restart sshd.service</code>重启sshd服务，然后<code>exit</code>退出登录，重新使用root账号登录会发现登陆请求被拒绝，让我们重新输入密码。重新输入密码后请求仍会被拒绝，所以我们可以使用<code>Ctrl + C</code>键终止当前命令。<a href="http://image.tooltool.club/19858366-d17d9b9790869391.png" data-fancybox="group" data-caption="重启配置文件并测试" class="fancybox"><img alt="重启配置文件并测试" title="重启配置文件并测试" data-src="http://image.tooltool.club/19858366-d17d9b9790869391.png" class="lazyload"></a></p></li><li><p>此时，我们便成功禁止了root账号进行ssh远程登录，但我们仍可以通过我们刚才创建的用户learn进行登录操作。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> Django </category>
          
          <category> 项目部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> Django </tag>
            
            <tag> 项目部署 </tag>
            
            <tag> 阿里云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/03/07/hello-world/"/>
      <url>/2020/03/07/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Clean-static-files"><a href="#Clean-static-files" class="headerlink" title="Clean static files"></a>Clean static files</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure></div><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><h3 id="Post-Front-matter"><a href="#Post-Front-matter" class="headerlink" title="Post Front-matter"></a>Post Front-matter</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">markdown</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top_img: （除非特定需要，可以不寫）</span><br><span class="line">comments  是否顯示評論（除非設置false,可以不寫）</span><br><span class="line">cover:  縮略圖</span><br><span class="line">toc:  是否顯示toc （除非特定文章設置，可以不寫）</span><br><span class="line">toc_number: 是否顯示toc數字 （除非特定文章設置，可以不寫）</span><br><span class="line">copyright: 是否顯示版權 （除非特定文章設置，可以不寫）</span><br><span class="line">mathjax:</span><br><span class="line">katex:</span><br><span class="line">hide:</span><br><span class="line">---</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hello World </tag>
            
            <tag> Markdowm </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
